import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;
import java.util.Stack;

public class TopologySort {

	static final int V = 7;
	static List<Integer>[] list = new ArrayList[V + 1];
	static Stack<Integer> stack = new Stack<Integer>();
	static boolean[] finished = new boolean[V + 1];
	static boolean[] visited = new boolean[V + 1];
	static boolean isCycle = false;

	public static void main(String[] args) {

		for (int i = 1; i <= V; i++)
			list[i] = new ArrayList<Integer>();

		list[1].add(2);
		list[1].add(5);
		list[2].add(3);
		list[3].add(4);
		list[4].add(6);
		list[5].add(6);
		list[6].add(7);

	}

	static void dfs(int v) {

		visited[v] = true;
		for (int adj : list[v]) {
			if (!visited[adj])
				dfs(adj);
			else if (!finished[v])
				isCycle = true;
		}
		finished[v] = true;
		stack.push(v);

	}

}
